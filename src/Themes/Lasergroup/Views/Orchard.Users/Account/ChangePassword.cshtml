@model dynamic
@{
    var requirementsMessage = T.Plural("The password can't be empty", "Passwords are required to be a minimum of {0} characters in length", (int)ViewData["PasswordLength"]).Text;
    var additionalRequirementsMessage = new List<string>();
    if ((bool)ViewData["LowercaseRequirement"]) {
        additionalRequirementsMessage.Add(T("one lowercase letter").Text);
    }
    if ((bool)ViewData["UppercaseRequirement"]) {
        additionalRequirementsMessage.Add(T("one uppercase letter").Text);
    }
    if ((bool)ViewData["NumberRequirement"]) {
        additionalRequirementsMessage.Add(T("one number").Text);
    }
    if ((bool)ViewData["SpecialCharacterRequirement"]) {
        additionalRequirementsMessage.Add(T("one special character").Text);
    }
    if (additionalRequirementsMessage.Count() > 0) {
        requirementsMessage = T("{0} and must contain at least {1}", requirementsMessage, string.Join(", ", additionalRequirementsMessage)).Text;
    }
    requirementsMessage += ".";
}
@Display(New.Parts_Title_Default(Title: T("Change Password").ToString(),
    Subtitle: T("Use the form below to change your password.").ToString(),
    ImageUrl: "",
    ImageTitle: "",
    ImageAlternateText: ""))
@Display(New.Parts_Body_Default(Html: requirementsMessage))
<hr />
<div class="container">
    @using (Html.BeginFormAntiForgeryPost(Url.Action("ChangePassword"), FormMethod.Post, new { @class = "form-horizontal" })) {
        <!-- Current Password -->
        <div class="form-group">
            <label for="currentPassword" class="col-lg-12">@T("Current Password")</label>
            <div class="col-lg-8">
                @Html.Password("currentPassword", string.Empty, new { @class = "form-control" })
                @Html.ValidationMessage("currentPassword")
            </div>
        </div>
        <!-- New Password -->
        <div class="form-group">
            <label for="newPassword" class="col-lg-12">@T("New Password")</label>
            <div class="col-lg-8">
                @Html.Password("newPassword", string.Empty, new { @class = "form-control" })
                @Html.ValidationMessage("newPassword")
            </div>
        </div>
        <!-- Confirm Password -->
        <div class="form-group">
            <label for="confirmPassword" class="col-lg-12">@T("Confirm Password")</label>
            <div class="col-lg-8">
                @Html.Password("confirmPassword", string.Empty, new { @class = "form-control" })
                @Html.ValidationMessage("confirmPassword")
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-8">
                <div class="space-20"></div>
                <input type="submit" class="submit" value="@T("Change Password")">
                <div class="space-20"></div>
            </div>
        </div>

    }
</div>