@using Newtonsoft.Json.Linq;
@{ 
    var tableData = Model.Table;
    JArray arr = JArray.Parse(tableData.TableData);
    var settings = Model.Settings;
    JArray columns = new JArray();

    if (!String.IsNullOrWhiteSpace(settings.ColumnsDefinition)) {
        var normalizedSettings = System.Text.RegularExpressions.Regex.Replace(Model.Settings.ColumnsDefinition, "\"editor\":[^},\"]+", "\"editor\":false");
        columns = JArray.Parse(normalizedSettings);
    }
    var headers = new List<string>();
    var fields = new List<string>();
    foreach (var token in columns) {
        headers.Add(token.Value<string>("title"));
        fields.Add(token.Value<string>("field"));
    }
}
@using (Script.Head()) {
    <style>
        .json-data-table td, .json-data-table th {
            padding: 5px;
        }
        .json-data-table-header {
            border-bottom: 1px solid red;
        }
    </style>
}
<table class="json-data-table">
    <caption></caption>
    <thead>
        <tr class="json-data-table-header">
            @foreach (var header in headers) {
                <th>
                    @(header)
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach(var obj in arr) {
            <tr>
                @foreach (var field in fields) {
                    <td>
                        @(obj.Value<string>(field))
                    </td>
                }
            </tr>
        }
    </tbody>
</table>